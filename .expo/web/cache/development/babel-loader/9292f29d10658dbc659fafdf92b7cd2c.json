{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\iTech\\\\source\\\\repos\\\\playground-app\\\\components\\\\Scanner.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport axios from 'axios';\n\nfunction Scan(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  function navigateToComment(data) {\n    return navigation.navigate({\n      name: 'CommentScreen',\n      params: data\n    });\n  }\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    axios.get(\"https://api.atmacom.crassus.tech/v1/equipment/find?id=\" + data).then(function (res) {\n      navigateToComment(res.data);\n    }).catch(function (err) {\n      console.log('Error getting data for ', data, 'with error: ', err);\n      alert(\"\\u039A\\u03AC\\u03C4\\u03B9 \\u03C0\\u03AE\\u03B3\\u03B5 \\u03C3\\u03C4\\u03C1\\u03B1\\u03B2\\u03AC! \\u039F \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC\\u03C2 Barcode \\u03C0\\u03BF\\u03C5 \\u03C3\\u03BA\\u03B1\\u03BD\\u03AC\\u03C1\\u03B1\\u03C4\\u03B5 \\u03B4\\u03B5\\u03BD \\u03B1\\u03BD\\u03C4\\u03B9\\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03B5\\u03AF \\u03C3\\u03B5 \\u03BA\\u03AC\\u03C0\\u03BF\\u03B9\\u03BF \\u03CC\\u03C1\\u03B3\\u03B1\\u03BD\\u03BF \\u03C4\\u03B7\\u03C2 \\u03C5\\u03C0\\u03B7\\u03C1\\u03B5\\u03C3\\u03AF\\u03B1\\u03C2.\");\n    });\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      backgroundColor: '#ffff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: StyleSheet.absoluteFillObject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }), React.createElement(View, {\n    style: styles.layerTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }), React.createElement(View, {\n    style: styles.layerCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  }, React.createElement(View, {\n    style: styles.layerLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }), React.createElement(View, {\n    style: styles.focused,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }), React.createElement(View, {\n    style: styles.layerRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  })), React.createElement(View, {\n    style: styles.layerBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }), scanned && React.createElement(Button, {\n    color: \"rgb(95, 187, 113)\",\n    title: 'Tap to Scan Again',\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }));\n}\n\nvar opacity = 'rgba(13, 156, 104, .8)';\nvar styles = StyleSheet.create({\n  layerTop: {\n    flex: 2,\n    backgroundColor: opacity\n  },\n  layerCenter: {\n    flex: 2,\n    flexDirection: 'row'\n  },\n  layerLeft: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  focused: {\n    flex: 8\n  },\n  layerRight: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  layerBottom: {\n    flex: 2,\n    backgroundColor: opacity\n  },\n  borderSquare: {\n    borderStyle: \"dashed\"\n  }\n});\nexport default Scan;","map":{"version":3,"sources":["C:/Users/iTech/source/repos/playground-app/components/Scanner.jsx"],"names":["React","useState","useEffect","BarCodeScanner","axios","Scan","props","navigation","hasPermission","setHasPermission","scanned","setScanned","navigateToComment","data","navigate","name","params","requestPermissionsAsync","status","handleBarCodeScanned","type","get","then","res","catch","err","console","log","alert","flex","flexDirection","justifyContent","backgroundColor","undefined","StyleSheet","absoluteFillObject","styles","layerTop","layerCenter","layerLeft","focused","layerRight","layerBottom","opacity","create","borderSquare","borderStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, Button } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport axios from 'axios';\r\n\r\n function Scan(props) {\r\n   const { navigation } = (props)\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  function navigateToComment(data){\r\n    return(\r\n      navigation.navigate({ name: 'CommentScreen', params: data})\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  },[]);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    axios.get(`https://api.atmacom.crassus.tech/v1/equipment/find?id=${data}`)\r\n    .then(res => {\r\n      navigateToComment(res.data);\r\n    }).catch(err => {\r\n        console.log('Error getting data for ', data, 'with error: ', err)\r\n        alert(`Κάτι πήγε στραβά! Ο κωδικός Barcode που σκανάρατε δεν αντιστοιχεί σε κάποιο όργανο της υπηρεσίας.`);\r\n    })\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-end',\r\n        backgroundColor: '#ffff'\r\n        \r\n      }}>\r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      />\r\n        <View style={styles.layerTop} />\r\n        <View style={styles.layerCenter}>\r\n          <View style={styles.layerLeft} />\r\n          <View style={styles.focused} />\r\n          <View style={styles.layerRight} />\r\n        </View>\r\n        <View style={styles.layerBottom} />\r\n      {scanned && <Button color=\"rgb(95, 187, 113)\" title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\n    </View>\r\n  );\r\n  \r\n}\r\nconst opacity = 'rgba(13, 156, 104, .8)';\r\nconst styles = StyleSheet.create({\r\n  layerTop: {\r\n    flex: 2,\r\n    backgroundColor: opacity\r\n  },\r\n  layerCenter: {\r\n    flex: 2,\r\n    flexDirection: 'row',\r\n\r\n  },\r\n  layerLeft: {\r\n    flex: 1,\r\n    backgroundColor: opacity,\r\n  },\r\n  focused: {\r\n    flex: 8\r\n  },\r\n  layerRight: {\r\n    flex: 1,\r\n    backgroundColor: opacity,\r\n    \r\n  },\r\n  layerBottom: {\r\n    flex: 2,\r\n    backgroundColor: opacity,\r\n  },\r\n  borderSquare: {\r\n    borderStyle:\"dashed\"\r\n  }\r\n});\r\nexport default Scan;\r\n\r\n"]},"metadata":{},"sourceType":"module"}